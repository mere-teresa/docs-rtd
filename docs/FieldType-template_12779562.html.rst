#. `eZ Publish Platform 5.<next> <index.html>`__
#. `eZ Publish Platform
   Documentation <eZ-Publish-Platform-Documentation_1114149.html>`__
#. `Development & Administration Guides <6291674.html>`__
#. `Developing with eZ Publish
   5 <Developing-with-eZ-Publish-5_2720528.html>`__
#. `Extending eZ Publish 5 <Extending-eZ-Publish-5_1736733.html>`__
#. `Field Type API and best
   practices <Field-Type-API-and-best-practices_2719880.html>`__

eZ Publish Platform 5.<next> : FieldType template
=================================================

Added by jerome.vieilledent@ez.no , edited by jerome.vieilledent@ez.no
on May 10, 2013

-  `Defining your FieldType
   template <#FieldTypetemplate-DefiningyourFieldTypetemplate>`__

   -  `Exposed variables <#FieldTypetemplate-Exposedvariables>`__
   -  `Reusing blocks <#FieldTypetemplate-Reusingblocks>`__
   -  `Registering your
      template <#FieldTypetemplate-Registeringyourtemplate>`__

Defining your FieldType template
================================

In order to be used by ```ez_render_field()`` Twig
helper <ez_render_field_12779554.html>`__, you need to define a
**template containing a block** dedicated to the Field display.

This block consists on a piece of template receiving specific variables
you can use to make the display vary.

Icon

You will find examples with built-in FieldTypes in
`EzPublishCoreBundle/Resources/views/content\_fields.html.twig <https://github.com/ezsystems/ezpublish-kernel/blob/master/eZ/Bundle/EzPublishCoreBundle/Resources/views/content_fields.html.twig>`__

**Template for a FieldType with "myfieldtype" identifier**

.. code:: theme:

    {% block myfieldtype_field %}
    {# Your code here #}
    {% endblock %}

Icon

By convention, your block **must** be named
``<fieldTypeIdentifier>_field``.

Exposed variables
-----------------

Name

Type

Description

``field``

``eZ\Publish\API\Repository\Values\Content\Field``

The field to display

``contentInfo``

``eZ\Publish\API\Repository\Values\Content\ContentInfo``

The ContentInfo to which the field belongs to

``versionInfo``

``eZ\Publish\API\Repository\Values\Content\VersionInfo``

The VersionInfo to which the field belongs to

``fieldSettings``

``mixed``

Settings of the field (depends on the FieldType)

``parameters``

``hash``

Options passed to ``ez_render_field()`` under the ``parameters`` key

``attr``

``hash``

| The attributes to add the generate the HTML markup.
| Contains at least a **``class``** entry, containing
``<fieldtypeidentifier>-field``

Reusing blocks
--------------

To ease FieldType template development, you can take advantage of all
defined blocks by using the `block()
function <http://twig.sensiolabs.org/doc/functions/block.html>`__.

You can for example take advantage of ``simple_block_field``,
``simple_inline_field`` or ``field_attributes`` blocks provided in
`content\_fields.html.twig <https://github.com/ezsystems/ezpublish-kernel/blob/master/eZ/Bundle/EzPublishCoreBundle/Resources/views/content_fields.html.twig#L413>`__.

Warning

Icon

To be able to reuse built-in blocks, **your template must inherit from
``EzPublishCoreBundle::content_fields.html.twig``**.

Registering your template
-------------------------

 

To make your template available, you must register it to the system.

**ezpublish/config/ezpublish.yml**

.. code:: theme:

    ezpublish:
        system:
            my_siteaccess:
                field_templates:
                    - 
                        template: "AcmeTestBundle:fields:my_field_template.html.twig"
                        # Priority is optional (default is 0). The higher it is, the higher your template gets in the list.
                        priority: 10

Icon

You can define these rules in a dedicated file instead of
``ezpublish/config/ezpublish.yml``. `Read the cookbook recipe to learn
more about
it <https://confluence.ez.no/display/EZP/import+settings+from+a+bundle>`__.

Document generated by Confluence on Feb 12, 2014 16:43
