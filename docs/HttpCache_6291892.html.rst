#. `eZ Publish Platform 5.<next> <index.html>`__
#. `eZ Publish Platform
   Documentation <eZ-Publish-Platform-Documentation_1114149.html>`__
#. `Development & Administration Guides <6291674.html>`__
#. `Developing with eZ Publish
   5 <Developing-with-eZ-Publish-5_2720528.html>`__
#. `MVC and Application <MVC-and-Application_2719826.html>`__
#. `Cache <Cache_6291890.html>`__

eZ Publish Platform 5.<next> : HttpCache
========================================

Added by jerome.vieilledent@ez.no , edited by andre.romcke@ez.no on Nov
18, 2013

Content Cache
=============

 

eZ Publish uses `Symfony
HttpCache <http://symfony.com/doc/current/book/http_cache.html>`__ to
manage content "view" cache, with both `expiration and validation
model <http://symfony.com/doc/current/book/http_cache.html#http-expiration-and-validation>`__. Hence
an **ETag** is computed for every content/version and sent in the Http
response. It is also possible to use expiration model to get lightning
fast responses.

An additional **X-Location-Id** header is added in the response for
identification (for details see `cache purge
document <Purge_6291894.html>`__).

Configuration
-------------

.. code:: theme:

    ezpublish:
        system:
            my_siteaccess:
                content:
                    view_cache: true      # Activates HttpCache for content
                    ttl_cache: true       # Activates expiration based HttpCache for content (very fast)
                    default_ttl: 60       # Number of seconds an Http response is valid in cache (if ttl_cache is true)

Making your controller content cache aware
------------------------------------------

Sometimes you need that your controller's cache expires in the same time
than a specific content (i.e. `ESI sub-requests with ``render`` twig
helper <http://symfony.com/doc/current/book/http_cache.html#using-esi-in-symfony2>`__,
for a menu for instance). To be able to do that, you just need to add
**X-Location-Id** header to the response object:

.. code:: theme:

    use Symfony\Component\HttpFoundation\Response;
     
    // In a controller
    // "Connects" the response to location #123 and sets a max age (TTL) of 1 hour.
    $response = new Response();
    $response->headers->set( 'X-Location-Id', 123 );
    $response->setSharedMaxAge( 3600 );

Making your controller user cache aware
---------------------------------------

If the content you're rendering depends on the user permissions, then an
additional header must be set for this as explained in `Context aware
HTTP cache <Context-aware-HTTP-cache_14712846.html>`__ 

 

-  `Purge <Purge_6291894.html>`__

Document generated by Confluence on Feb 12, 2014 16:43
